{"version":3,"file":"products.js","sourceRoot":"","sources":["../../../src/components/products.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAC7E,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D,OAAO,WAAW,CAAC;AAGnB,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QAC6B,aAAQ,GAAc,EAAE,CAAC;QACvB,cAAS,GAAG,IAAI,CAAC;IAmChD,CAAC;IAjCC,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;KAIT,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,aAAa,EAAE;aACZ,IAAI,CAAC,IAAI,CAAC,EAAE;YACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,IACT,IAAI,CAAC,SAAS;YACZ,CAAC,CAAC,IAAI,CAAA,oBAAoB;YAC1B,CAAC,CAAC,IAAI,CAAA;cACA,IAAI,CAAC,QAAQ,CAAC,GAAG,CACjB,CAAC,OAAgB,EAAE,EAAE,CACnB,IAAI,CAAA,0BAA0B,OAAO,kBAAkB,CAC1D;iBAET,SAAS,CAAC;IACZ,CAAC;CACF,CAAA;AApC4B;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;0CAA0B;AACvB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;2CAAkB;AAFnC,QAAQ;IADpB,aAAa,CAAC,cAAc,CAAC;GACjB,QAAQ,CAqCpB;SArCY,QAAQ","sourcesContent":["import { LitElement, html, css, customElement, property } from 'lit-element';\nimport { fetchProducts } from '../shared/warehouse.services';\nimport { Product } from '../models/product';\nimport './product';\n\n@customElement('app-products')\nexport class Products extends LitElement {\n  @property({ type: Array }) products: Product[] = [];\n  @property({ type: Boolean }) isLoading = true;\n\n  static get styles() {\n    return css`\n      :host {\n        width: 50%;\n      }\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    fetchProducts()\n      .then(data => {\n        this.isLoading = false;\n        this.products = data;\n        console.log('Success:', data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }\n\n  render() {\n    return html` ${\n      this.isLoading\n        ? html`<p>Loading....</p>`\n        : html`<div>\n            ${this.products.map(\n              (product: Product) =>\n                html`<app-product .product=\"${product}\"></app-product>`\n            )}\n          </div>`\n    } </div>`;\n  }\n}\n"]}